
datasource db {
  url      = env("DATABASE_URL")
  provider = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id
  name      String
  email     String @unique   
  role      Role? 
  enrollmentStatus  EnrollmentStatus @default(Pending)

  admin Admin[]
  professor Professor[]
  student Student[]

  }

model Student {
  id  String @id

  user User @relation(fields:[userId], references: [id])
  userId     String  

  courses Professor @relation(fields: [professorId], references: [id])
  professorId String

  grade Grade[]

  @@unique([professorId, userId])
}

model Professor {
  id String @id

  user User @relation(fields: [userId], references: [id])
  userId String

  course Course @relation(fields: [courseId], references: [id])
  courseId String 

  assigment Assignment[]
  student Student[]

  @@unique([courseId, userId])


}

model Admin {
  id String @id

  user User @relation(fields: [userId], references: [id])
  userId String 
}

model Course {

  id    String  @id
  name  String @unique
  description String 

  professor Professor[]

}

//All assignments will be PDF files stored on AWS S3
model Assignment {
  id String @id
  name String @unique
  points Int
  description String
  assigned_date DateTime
  due_date DateTime

  professor Professor @relation(fields:[professorId], references:[id])
  professorId String

  grade Grade[]
}


model Grade {
  //the id assigned to the assignment a student submit back to the professor
  id  String @id
  grade Float 
  fileId String  

  assignment Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId String

  student Student @relation(fields: [studentId], references: [id])
  studentId String
}

enum Role {
  Admin
  Professor
  Student
}

enum EnrollmentStatus {
  Accepted
  Rejected
  Pending
}