
datasource db {
  url      = env("DATABASE_URL")
  provider = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id
  name      String
  email     String @unique   
  role      Role? 
  enrollmentStatus  EnrollmentStatus @default(Pending)

  adminPrismaOnly Admin[]
  professorPrismaOnly ProfessorCourse[]
  studentPrismaOnly StudentCourse[]

  }

//The association between a user, with a role of Student, and a course
//being taught by a user with a role of Professor.
model StudentCourse {
  id String @id

  user User @relation(fields:[studentId], references: [id])
  studentId String  

  professorCourse ProfessorCourse @relation(fields: [professorCourseId], references: [id])
  professorCourseId String

  submission AssignmentSubmission[]

  @@unique([studentId, professorCourseId])


}

//The association between a user, with a role of Professor, and a course
//they will be teaching.
model ProfessorCourse {
  id String @id

  user User @relation(fields: [professorId], references: [id])
  professorId String

  course Course @relation(fields: [courseId], references: [id])
  courseId String 

  assignment Assignment[]
  studentCourse StudentCourse[]

  @@unique([courseId,professorId])
}

//A course that is available to be taught by a user with a role of Professor.
//Users, with a role of Student, do NOT take these course directly.
//They will take the course by associating with an instance of ProfessorCourse.
model Course {
  id    String  @id
  name  String @unique
  description String 

  professorCourse ProfessorCourse[]

}

//Assignments will be created by users with a role of Professor
//who must be teaching a course to be able to create assignment
model Assignment {
  id String @id
  pdfId String @unique
  pdfName String
  pointsWorth String @default("0")
  name String @unique
  description String
  assigned_date String
  due_date String

  professorCourse ProfessorCourse @relation(fields:[professorCourseId], references:[id])
  professorCourseId String

  submission AssignmentSubmission[]
}

//The assignment a user, with a role of Student, will be assigned
//when enrolled in course.
model AssignmentSubmission {
  id String @id
  pointsEarned String? @default("0")
  pdfId String? @unique
  pdfName String? 
  
  assigment Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId String

  studentCourse StudentCourse @relation(fields: [studentCourseId], references: [id])
  studentCourseId String

}

model Admin {
  id String @id

  user User @relation(fields: [adminId], references: [id])
  adminId String
}

enum Role {
  Admin
  Professor
  Student
}

enum EnrollmentStatus {
  Accepted
  Rejected
  Pending
}